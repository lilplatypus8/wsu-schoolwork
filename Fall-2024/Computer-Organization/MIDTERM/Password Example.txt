.ORIG x3000
START
JSR GETPASS ; get pw
JSR CHECKPASS ; check pw
ADD R0, R0, #1
BRz BAD
BRnp GOOD

BAD
LEA R0, FAIL ; prepare to print
PUTS
BRnzp START

GOOD
LEA R0, SUCCESS
PUTS

HALT
PASSWORD .STRINGZ "CEG3310L" ; pw
PROMPT .STRINGZ "Please enter your password: " ; pw prompt
FAIL .STRINGZ "Login Unsuccessful: Incorrect Password\n" ; fail msg
SUCCESS .STRINGZ "Login Successful\n" ; success msg
PW_ARRAY .BLKW #20 ; entered pw array
LF .FILL #10 ; '\n'
N_LF .FILL #-10 ; -'\n'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
GETPASS
ST R7, GET_R7 ; callee save
LEA R0, PROMPT ; LOAD PROMPT
PUTS ; OUTPUT

AND R0, R0, #0
LEA R3, PW_ARRAY
PASSLOOP
    OUT
    GETC

    STR R0, R3, #0
    ADD R3, R3, #1

    LD R1, N_LF
    ADD R2, R0, R1 ; CHECK FOR \N
BRnp PASSLOOP

ADD R3, R3, #-1
ADD R0, R0, #-10
;BRnp GETDONE
STR R0, R3, #0

;GETDONE
LD R0, LF ; ADD R0, R0, #10
OUT

LD R7, GET_R7 ; callee load
RET
GET_R7 .BLKW #1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; R0 = -1 if failed
CHECKPASS 
ST R7, CHECK_R7

; PREPARE CHAR ARRAYS
LEA R1, PASSWORD
LEA R2, PW_ARRAY

; CHECK FOR EMPTY PW
LDR R4, R2, #0
BRz BADPASS

CHECKLOOP
    LDR R3, R1, #0
    LDR R4, R2, #0

    NOT R4, R4
    ADD R4, R4, #1
    ADD R5, R3, R4
    BRz GOODSOFAR
    BRnzp BADPASS

    GOODSOFAR   
        ; CHECK FOR X0 IN REAL PASSWORD FOR THE END
        ADD R3, R3, #0
        BRz GOODPASS

        ; ADVANCE CHAR ARRAYS
        ADD R1, R1, #1
        ADD R2, R2, #1
    BRnzp CHECKLOOP ; CHECK NEXT CHAR

    GOODPASS   
        AND R0, R0, #0 ; CLEAR R0
    BRnzp CHECKDONE

    BADPASS
        AND R0, R0, #0
        ADD R0, R0, #-1
    BRnzp CHECKDONE
CHECKDONE

LD R7, CHECK_R7
RET
CHECK_R7 .BLKW #1
.END