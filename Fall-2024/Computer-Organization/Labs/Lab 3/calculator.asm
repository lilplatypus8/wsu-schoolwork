.ORIG x3000

START
LEA R0, MESS1
PUTS

JSR GETNUM 
ST R0, NUM1

LD R0, NEWLINE
OUT

LEA R0, MESS2
PUTS

JSR GETOP
ST R0, OP

LD R0, NEWLINE
OUT

LEA R0, MESS3
PUTS

JSR GETNUM
ST R0, NUM2

LD R0, NEWLINE
OUT

LD R0, NUM1
LD R1, NUM2
LD R2, OP
JSR CALC
ST R0, RESULT

LEA R0, MESS4
PUTS

JSR DISPLAY

LD R0, NEWLINE
OUT

AND R0, R0, #0
AND R1, R1, #0
AND R2, R2, #0
BR START
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MESS1 .STRINGZ "Enter first number (00 - 99): "
MESS2 .STRINGZ "Enter an operation (+, -, *): "
MESS3 .STRINGZ "Enter second number (00 - 99): "
MESS4 .STRINGZ "Result: "
NEWLINE .FILL x000A

NUM1 .FILL #0
NUM2 .FILL #0
TENSPLACE .FILL #0
ONESPLACE .FILL #0
OP .FILL #0
RESULT .BLKW #1
TEMP_RESULT .BLKW #1
MULTCHAR .FILL #-42
ADDCHAR .FILL #-43
SUBCHAR .FILL #-45
NEGATIVE_SIGN .FILL #45
ASCII_NEGATIVE .FILL #-48
ASCII_POSITIVE .FILL #48

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

GETNUM
; callee saves
ST R1, GETNUM_R1
ST R2, GETNUM_R2
ST R3, GETNUM_R3
ST R7, GETNUM_R7

LD R1, ASCII_NEGATIVE
ADD R2, R2, #0
ADD R2, R2, #-10

GETC
OUT

ADD R0, R0, R1
ST R0, TENSPLACE

GETC
OUT

ADD R0, R0, R1
ST R0, ONESPLACE

AND R3, R3, #0

LD R0, TENSPLACE

GETDIGITS
    ADD R3, R3, R0
    ADD R2, R2, #1
    BRz ENDGETDIGITS
    BRnp GETDIGITS
ENDGETDIGITS

LD R0, ONESPLACE
ADD R3, R3, R0
ADD R0, R3, #0

LD R1, GETNUM_R1
LD R2, GETNUM_R2
LD R3, GETNUM_R3
LD R7, GETNUM_R7
RET
GETNUM_R1 .FILL #0
GETNUM_R2 .FILL #0
GETNUM_R3 .FILL #0
GETNUM_R7 .FILL #0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

GETOP
ST R7, GETOP_R7

GETC
OUT

LD R7, GETOP_R7
RET
GETOP_R7 .FILL #0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CALC
ST R3, CALC_R3
ST R4, CALC_R4
ST R7, CALC_R7

LD R3, ADDCHAR
ADD R4, R3, R2
BRz ADDITION

LD R3, SUBCHAR
ADD R4, R3, R2
BRz SUBTRACTION

LD R3, MULTCHAR
ADD R4, R3, R2
BRz MULTIPLICATION

ADDITION
    ADD R0, R0, R1
BR CALCDONE

SUBTRACTION
    NOT R1, R1
    ADD R1, R1, #1
    ADD R0, R0, R1
BR CALCDONE

MULTIPLICATION
    JSR MULTIPLY
BR CALCDONE

CALCDONE

LD R3, CALC_R3
LD R4, CALC_R4
LD R7, CALC_R7
RET
CALC_R3 .FILL #0
CALC_R4 .FILL #0
CALC_R5 .FILL #0
CALC_R7 .FILL #0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MULTIPLY
ST R4, MULT_R4
ST R5, MULT_R5
ST R7, MULT_R7

ADD R4, R4, R0 ; R4 <- R0
ADD R5, R1, #-1 ; R5 <- R1

MULT_LOOP
    ADD R4, R4, R0 ; curr sum + x
    ADD R5, R5, #-1 ; decrement counter
    BRz END_MULT_LOOP
    BR MULT_LOOP
END_MULT_LOOP

AND R0, R0, #0 ; R0 <- 0
ADD R0, R4, R0 ; R0 <- R4

LD R4, MULT_R4
LD R5, MULT_R5
LD R7, MULT_R7
RET
MULT_R4 .FILL #0
MULT_R5 .FILL #0
MULT_R7 .FILL #0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DISPLAY

ST R0, DISPLAY_R0
ST R1, DISPLAY_R1
ST R3, DISPLAY_R3
ST R4, DISPLAY_R4
ST R5, DISPLAY_R5
ST R7, DISPLAY_R7


LD R0, RESULT
ADD R0, R0, #0
BRzp CALC_DISPLAY

; if sign is negative, print "-"
NEGATIVE
    
    LD R0, NEGATIVE_SIGN
    OUT
    
    LD R0, RESULT
    NOT R0, R0
    ADD R0, R0, #1
    
    BR CALC_DISPLAY
    
POSITIVE
ST R0, TEMP_RESULT
    

CALC_DISPLAY

;THOUSANDS;
AND R1, R1, #0 ; R1 = counter
LD R3, THOUSAND_COMP ; R3 <- #-1000
LD R4, THOUSAND ; R4 <- #1000

CALC_THOUSANDS
    ADD R0, R0, R3 ; R0 = R0 - 1000
    BRn EXIT_CALC_THOUSANDS
    ADD R1, R1, #1 ; R1++
    ADD R0, R0, #0
    BRzp CALC_THOUSANDS
EXIT_CALC_THOUSANDS

ADD R0, R0, R4 ; undo last subtraction
ST R0, TEMP_RESULT ; store current value of result
LD R5, ASCII_POSITIVE ; load R5 with ascii offset
ADD R0, R5, R1
OUT ; print digit to console
LD R0, TEMP_RESULT

;HUNDREDS;
AND R1, R1, #0 
LD R3, HUNDRED_COMP 
LD R4, HUNDRED 

CALC_HUNDRED
    ADD R0, R0, R3 
    BRn EXIT_CALC_HUNDREDS
    ADD R1, R1, #1 ; R1++
    ADD R0, R0, #0
    BRzp CALC_HUNDRED
EXIT_CALC_HUNDREDS

ADD R0, R0, R4 
ST R0, TEMP_RESULT 
ADD R0, R5, R1
OUT
LD R0, TEMP_RESULT

;TENS;
AND R1, R1, #0
LD R3, TEN_COMP
LD R4, TEN

CALC_TENS
    ADD R0, R0, R3
    BRn EXIT_CALC_TENS
    ADD R1, R1, #1
    ADD R0, R0, #0
    BRzp CALC_TENS
EXIT_CALC_TENS

ADD R0, R0, R4
ST R0, TEMP_RESULT
ADD R0, R5, R1
OUT
LD R0, TEMP_RESULT

AND R1, R1, #0
LD R3, ONE_COMP
LD R4, ONE

;ONES;
CALC_ONES
    ADD R0, R0, R3
    BRn EXIT_CALC_ONES
    ADD R1, R1, #1
    ADD R0, R0, #0
    BRzp CALC_ONES
EXIT_CALC_ONES

ADD R0, R0, R4
ST R0, TEMP_RESULT
ADD R0, R5, R1
OUT
LD R0, TEMP_RESULT

LD R0, DISPLAY_R0
LD R1, DISPLAY_R1
LD R3, DISPLAY_R3
LD R4, DISPLAY_R4
LD R5, DISPLAY_R5
LD R7, DISPLAY_R7
RET
ONE .FILL #1
ONE_COMP .FILL #-1
TEN .FILL #10
TEN_COMP .FILL #-10
HUNDRED .FILL #100
HUNDRED_COMP .FILL #-100
THOUSAND .FILL #1000
THOUSAND_COMP .FILL #-1000
DISPLAY_R0 .FILL #0
DISPLAY_R1 .FILL #0
DISPLAY_R3 .FILL #0
DISPLAY_R4 .FILL #0
DISPLAY_R5 .FILL #0
DISPLAY_R7 .FILL #0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.END